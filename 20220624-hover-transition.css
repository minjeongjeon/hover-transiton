@charset "utf-8";
* {
    margin: 0;
    padding: 0;
}

.box {
    width: 100px;
    height: 100px;
    background-color: antiquewhite;
    transition: 0.5s 4s;
}
.box:hover {
    background-color: lightpink;
    width: 300px;
    height: 300px;
}
.box2 {
    width: 600px;
    height: 300px;
    border: 1px solid #000;
    cursor: pointer;
    transition: 1s;
}

.box2:hover {
    border: 1px solid lightblue;
}

p:hover {
    text-decoration: underline;
    font-weight: bold;
    color: lightblue;
}

/* 
text-decoration: underline 밑줄 
text-decoration: linethrough 취소선
*/

/* 
:hover - 가상요소 / 실제로는 존재하지 않는 요소
해당 선택자 요소에 마우스가 올라 갔을 때 이벤트 속성을 지정하며,
마우스가 빠져 나왔을 때는 초기값으로 돌아간다.
선택자:hover 사용시 절대로 띄어쓰기를 사용해서는 안된다.
예 ) box:hover(0) /.box : hover(x) / .box: hover(x) / box :hover (x) > 다만 마지막은 자식 혹은 자손 선택자가 hover 이벤트가 동작한다.

transitoon - 기본값 / 변경되는 값을 자연스럽게 이어주는 속성
1s > 1000ms > 1초
0.5s > 500ms > 0.5초
delay 도 사용 가능하며, 뒤쪽 시간을 작성 시 해당 시간 뒤에 동작
예) transition 1s 2s 사용시 > 2초를 기다렸다가 1초 동안 동작
만약 각각 요소별로 다르게 설정해야 한다면 , 를 적용해 사용
예) transition: width 1s, height 2s, background-color 3s

사용법: transition: 선택자 총진행시간 속도 딜레이 
-속도 / 딜레이 / 선택자는 생략이 가능하며, 총 진행시간은 필수로 작성
단, 속성 생략 시 해당 요소의 전테 속성으로 동작

속도 
ease - 기본값 > 천천히 시작해 빠르게 진행되며, 천천히 끝남
linear > 처음부터 끝까지 동일한 속도
ease-in > 천천히 시작 빠르게 종료
ease-out> 빠르게 시작 천천히 종료
ease-in-out > 천천히 시작해 잠시 가속한뒤 천천히 종료
step-start > 시작과 동시에 종료
step-end > 종료와 동시에 시작
*/

.box {
    width: 16px;
    height: 16px;
    background-color: antiquewhite;
    transition: 4s 2s;
}
input:checked ~ .box{
    width: 100%;
}
.tr1{
    transition-timing-function: ease;
}
.tr2{
    transition-timing-function: linear;
}
.tr3{
    transition-timing-function: ease-in;
}
.tr4{
    transition-timing-function: ease-out;
}
.tr5{
    transition-timing-function: ease-in-out;
}
.tr6{
    transition-timing-function: step-start;
}
.tr7{
    transition-timing-function: step-end;
}